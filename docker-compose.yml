version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres:14.6
    restart: unless-stopped
    environment:
      #POSTGRES_USER: ${POSTGRES_USER:-postgres}
      #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-toor}
      POSTGRES_USER: lemur
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    #      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: auth
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - mysql

  mongo:
    container_name: mongo
    image: mongo
    restart: unless-stopped
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27018:27017"
    networks:
      - mongo
    volumes:
      - mongodb_data_container:/data/db

#  mongo-express:
#    container_name: mongo-express
#    image: mongo-express
#    restart: unless-stopped
#    ports:
#      - "4444:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: example
#      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#    networks:
#      - mongo

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.8-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring

  eureka-server:
    container_name: eureka-server
    image: eureka-server:latest
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  apigw:
    container_name: apigw
    image: apigw:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - eureka-server

  user:
    container_name: user
    image: user:latest
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - mysql
    depends_on:
      - eureka-server
      - mysql

  dictionary:
    container_name: dictionary
    image: dictionary:latest
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq

  group:
    container_name: group
    image: group:latest
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq

  word:
    container_name: word
    image: word:latest
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq

  sentence:
    container_name: sentence
    image: sentence:latest
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq

  grammar:
    container_name: grammar
    image: grammar:latest
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
      - postgres
      - rabbitmq

  text:
    container_name: text
    image: text:latest
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - mongo
    depends_on:
      - eureka-server
      - mongo
      - rabbitmq

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  mysql:
    driver: bridge
  mongo:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  my-db:
  mongodb_data_container:

#docker rmi eureka-server:latest sentence:latest apigw:latest grammar:latest dictionary:latest user:latest word:latest group:latest text:latest